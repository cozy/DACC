pipeline {

  agent {
    label 'docker'
  }

  options {
    disableConcurrentBuilds()
    gitLabConnection('https://gitlab.cozycloud.cc')
    gitlabBuilds(builds: ["Deploy-prod"])
    // timestamps()
  }

  stages {

    stage ('Deploy') {
      steps {
        gitlabCommitStatus("Deploy-prod") {
          echo 'Deploying....'
          mattermostSend(color: "warning", channel: "feat---dacc", message: "Deploying DACC on **production**")
          mattermostSend(color: "warning", channel: "publication", message: "Deploying DACC on **production**")
          dir('sandbox/') {
            sh '''
              ssh -o StrictHostkeyChecking=no jenkins@dacc-01-prod hostname -f
              ssh -o StrictHostkeyChecking=no jenkins@dacc-01-prod sudo /usr/local/sbin/update-dacc.sh
            '''
          }
        }
      }
    }

  }
  post {
    failure {
      mattermostSend(color: "danger", channel: "feat---dacc", message: "DACC deploy on **production** <${env.BUILD_URL}|build ${env.BUILD_NUMBER}> failed")
      mattermostSend(color: "danger", channel: "publication", message: "DACC deploy on **production** <${env.BUILD_URL}|build ${env.BUILD_NUMBER}> failed")
    }
    success {
      mattermostSend(color: "good", channel: "feat---dacc", message: "DACC deploy on **production** <${env.BUILD_URL}|build ${env.BUILD_NUMBER}> succeeded")
      mattermostSend(color: "good", channel: "publication", message: "DACC deploy on **production** <${env.BUILD_URL}|build ${env.BUILD_NUMBER}> succeeded")
    }
    aborted {
      mattermostSend(color: "#000000", channel: "feat---dacc", message: "DACC deploy on **production** <${env.BUILD_URL}|build ${env.BUILD_NUMBER}> aborted")
      mattermostSend(color: "#000000", channel: "publication", message: "DACC deploy on **production** <${env.BUILD_URL}|build ${env.BUILD_NUMBER}> aborted")
    }
    cleanup {
      /* clean up our workspace */
      cleanWs()
    }
  }
}
